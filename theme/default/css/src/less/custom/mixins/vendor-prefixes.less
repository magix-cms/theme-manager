// Transformations - Scale3d
.scale3d(@ratioX; @ratioY; @ratioZ) {
	-webkit-transform: scale3d(@ratioX, @ratioY, @ratioZ);
	-ms-transform: scale3d(@ratioX, @ratioY, @ratioZ); // IE9 only
	-o-transform: scale3d(@ratioX, @ratioY, @ratioZ);
	transform: scale3d(@ratioX, @ratioY, @ratioZ);
}

// Auto-creation of transition values
.auto-transition(@time,@prop: all,@fct: ease,@delay: 0s) {
	.transition(@prop @time @fct @delay);
}

// Set margin to 0
.no-margin() {
	margin: 0;
}
// Set padding to 0
.no-padding() {
	padding: 0;
}
// Set margin and padding to 0
.no-martini() {
	.no-margin();
	.no-padding();
}
// Remove gutter
.no-gutter() {
	.row {
		margin: 0;
		> div {
			padding: 0;
			margin: 0;
		}
	}
}


// Remove borders
.no-border() {
	border: none;
	border-radius: 0;
}

// Set style to a circle
.circle(@radius) {
	.square(@radius * 2);
	border-radius: @radius * 4;
}

// Set a element to be a block with at 100%
.full-width() {
	display: block;
	width: 100%;
}

// Define style for a full width block
.section-block(@color) {
	.full-width;
	background-color: @color;
	margin-bottom: 30px;
	padding: 50px 0 60px;
}

// Center a content in both width and height size of its parent. Parent must be in display: table
// Use parent value for item to init the main container
// Use child value for item to init the content container
// Exemple
//  <div> Parent
//      <p>content</p> Child
//  </div>
.center-content(@item) {
	.behavior(@item) when (@item = parent) {
		display: table;
	}
	.behavior(@item) when (@item = child) {
		display: table-cell;
		position: relative;
		text-align: center;
		vertical-align: middle;
	}
	.behavior(@item);
}